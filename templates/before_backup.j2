{% if nexus_docker_backup_dir is defined %}

# *****************************************************************************
# Backup nexus3

nexus_backup_task_id="{{ nexus_tasks[nexus_backup_task_name]['id'] }}"

function nexus_task_get_state {
    local taskid="$1"
    local url="https://{{ nexus_hostname }}/service/rest/v1/tasks/${taskid}"
    curl --user "bacula:{{ nexus_bacula_password }}" -s --request GET "$url" | python -c "import sys,json; print json.load(sys.stdin)['currentState']"
}

function nexus_task_wait_state() {
    local taskid="$1"
    local target_state="$2"
    until [ "x$target_state" = "x$(nexus_task_get_state $taskid)" ];
    do
        sleep 10
    done
}

function nexus_task_run() {
    local taskid="$1"
    local url="https://{{ nexus_hostname }}/service/rest/v1/tasks/${taskid}/run"

    nexus_task_wait_state "$nexus_backup_task_id" "WAITING"
    curl --user "bacula:{{ nexus_bacula_password }}" -s --request POST "$url"
    nexus_task_wait_state "$nexus_backup_task_id" "WAITING"
}

mkdir -p -m u=rwx,g=rwx,o= {{ nexus_docker_backup_dir }}

printf '==> Backing up Nexus database\n'
docker exec '{{ nexus_container_name }}' bash -c '\
    chown -R nexus:nexus "{{ nexus_backup_dir }}"; \
    rm -rf "{{ nexus_backup_dir }}/db";'
time nexus_task_run "$nexus_backup_task_id"
time docker run --rm \
    --network none \
    --volume {{ nexus_backup_volume }}:/src:z \
    --volume {{ nexus_docker_backup_dir }}:/dest:z \
    instrumentisto/rsync-ssh:latest \
    rsync --archive --itemize-changes --delete --ignore-missing-args \
        /src/db/ \
        /dest/db/

printf '==> Backing up Nexus blobstores\n'
time docker run --rm \
    --network none \
    --volume {{ nexus_data_volume }}:/src:z \
    --volume {{ nexus_docker_backup_dir }}:/dest:z \
    instrumentisto/rsync-ssh:latest \
    rsync --archive --itemize-changes --delete --ignore-missing-args \
        /src/blobs/ \
        /dest/blobs/

{% endif %}
