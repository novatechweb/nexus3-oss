---

- name: Get rest API endpoint (v < 3.8.0)
  set_fact:
    nexus_rest_api_endpoint: "service/siesta/rest/v1"
  when: nexus_version is version_compare('3.8.0', '<')

- name: Get rest API endpoint (v >= 3.8.0)
  set_fact:
    nexus_rest_api_endpoint: "service/rest/v1"
  when: nexus_version is version_compare('3.8.0', '>=')

- name: Get internal container path to nexus data
  set_fact:
    nexus_data_dir: '/nexus-data'

- name: Get path to database restore dir (v < 3.11.0)
  set_fact:
    nexus_db_restore_dir: "{{ nexus_data_dir }}/backup"
  when: nexus_version is version_compare('3.11.0', '<')

- name: Get path to database restore dir (v >= 3.11.0)
  set_fact:
    nexus_db_restore_dir: "{{ nexus_data_dir }}/restore-from-backup"
  when: nexus_version is version_compare('3.11.0', '>=')

- name: Create nexus data volume
  docker_volume:
    name: '{{ nexus_data_volume }}'
    state: present

- name: "Deploy backup restore script"
  template:
    src: "nexus-docker-blob-restore.sh.j2"
    dest: "/sbin/nexus-blob-restore.sh"
    mode: 0755

- name: 'Check if data directory is empty (first-time install)'
  docker_container:
    name: '{{ nexus_container_name }}-first-run-check'
    cleanup: yes
    detach: no
    image: 'alpine:latest'
    volumes:
      - "{{ nexus_data_volume }}:{{ nexus_data_dir }}:z"
    command: ls "{{ nexus_data_dir }}"
  register: nexus_data_dir_contents
  check_mode: no
  changed_when: false

- name: Set first_install fact
  set_fact:
    nexus_first_install: '{{ nexus_data_dir_contents.ansible_facts.docker_container.Output == "" }}'

- name: Create nexus backup volume
  docker_volume:
    name: '{{ nexus_backup_volume }}'
    state: present

- name: Start nexus container
  docker_container:
    name: '{{ nexus_container_name }}'
    hostname: '{{ public_hostname }}'
    image: '{{ nexus_image_tag }}'
    networks: '{{ nexus_networks }}'
    volumes: '{{ nexus_volumes }}'
    ports: '{{ nexus_port_args }}'
    purge_networks: true
    state: started
  register: nexus_container

- name: Register nexus host
  add_host:
    name: nexus
    groups: services
    ip_addr: "{{nexus_ip_addr}}"
    uri: "https://{{public_hostname}}{{nexus_default_context_path}}"
    private_uri: "http://{{host}}:{{port}}{{nexus_default_context_path}}"
  vars:
    host: "{{ nexus_container.ansible_facts.docker_container.NetworkSettings.Networks[docker_network_frontend].IPAddress }}"
    port: "{{ nexus_default_port }}"
  changed_when: false

- name: First-time install admin password
  set_fact:
    current_nexus_admin_password: 'admin123'
  when: nexus_first_install

- name: Subsequent re-provision admin password
  set_fact:
    current_nexus_admin_password: "{{ nexus_admin_password }}"
  when: not nexus_first_install
  no_log: true

- name: Wait for container to start
  uri:
    url: "{{hostvars.nexus.private_uri}}service/metrics/ping"
    force_basic_auth: yes
    method: GET
    password: "{{ current_nexus_admin_password }}"
    return_content: yes
    status_code: 200,204
    user: 'admin'
  register: nexus_ping
  retries: 20
  delay: 5
  until: nexus_ping.content == "pong\n"

- name: Set permissions on backup volume
  command:
    docker exec -u root nexus3 chmod 777 {{nexus_backup_dir}}
  changed_when: false

- name: Declare groovy scripts in nexus
  include: declare_script_each.yml
  vars:
    item: "{{ filename | basename | replace('.groovy','') }}"
  loop: "{{ query('fileglob', 'groovy/*.groovy') }}"
  loop_control:
    loop_var: filename
